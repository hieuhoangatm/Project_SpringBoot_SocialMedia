{"ast":null,"code":"import { FETCH_FOLLOWING_USER_STORY, FETCH_USER_STORY } from \"./ActionType\";\nexport const findFollowingUserStory = data => async dispatch => {\n  const res = await fetch(`http://localhost:5454/api/stories/f/${data.userIds}`, {\n    method: \"GET\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: \"Bearer \" + data.jwt\n    }\n  });\n  const stories = await res.json();\n  dispatch({\n    type: FETCH_FOLLOWING_USER_STORY,\n    payload: stories\n  });\n};\nexport const findStoryByUserId = data => async dispatch => {\n  try {\n    const res = await fetch(`http://localhost:5454/api/stories/${data.userId}`, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: \"Bearer \" + data.jwt\n      }\n    });\n    const stories = await res.json();\n    console.log(\"stories :- \", stories);\n    dispatch({\n      type: FETCH_USER_STORY,\n      payload: stories\n    });\n  } catch (error) {\n    console.log(\"catch error : \", error);\n  }\n};","map":{"version":3,"names":["FETCH_FOLLOWING_USER_STORY","FETCH_USER_STORY","findFollowingUserStory","data","dispatch","res","fetch","userIds","method","headers","Authorization","jwt","stories","json","type","payload","findStoryByUserId","userId","console","log","error"],"sources":["C:/Users/ADMIN/Documents/Zalo Received Files/ProjectJAVA/Frontend/src/Redux/Story/Action.js"],"sourcesContent":["import { FETCH_FOLLOWING_USER_STORY, FETCH_USER_STORY } from \"./ActionType\";\r\n\r\nexport const findFollowingUserStory = (data) => async (dispatch) => {\r\n  const res = await fetch(\r\n    `http://localhost:5454/api/stories/f/${data.userIds}`,\r\n    {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: \"Bearer \" + data.jwt,\r\n      },\r\n    }\r\n  );\r\n\r\n  const stories = await res.json();\r\n  dispatch({ type: FETCH_FOLLOWING_USER_STORY, payload: stories });\r\n};\r\n\r\nexport const findStoryByUserId = (data) => async (dispatch) => {\r\n  try {\r\n    const res = await fetch(\r\n      `http://localhost:5454/api/stories/${data.userId}`,\r\n      {\r\n        method: \"GET\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: \"Bearer \" + data.jwt,\r\n        },\r\n      }\r\n    );\r\n    const stories = await res.json();\r\n    console.log(\"stories :- \",stories)\r\n    dispatch({ type: FETCH_USER_STORY, payload: stories });\r\n  } catch (error) {\r\n    console.log(\"catch error : \", error);\r\n  }\r\n};\r\n"],"mappings":"AAAA,SAASA,0BAA0B,EAAEC,gBAAgB,QAAQ,cAAc;AAE3E,OAAO,MAAMC,sBAAsB,GAAIC,IAAI,IAAK,MAAOC,QAAQ,IAAK;EAClE,MAAMC,GAAG,GAAG,MAAMC,KAAK,CACpB,uCAAsCH,IAAI,CAACI,OAAQ,EAAC,EACrD;IACEC,MAAM,EAAE,KAAK;IACbC,OAAO,EAAE;MACP,cAAc,EAAE,kBAAkB;MAClCC,aAAa,EAAE,SAAS,GAAGP,IAAI,CAACQ;IAClC;EACF,CAAC,CACF;EAED,MAAMC,OAAO,GAAG,MAAMP,GAAG,CAACQ,IAAI,EAAE;EAChCT,QAAQ,CAAC;IAAEU,IAAI,EAAEd,0BAA0B;IAAEe,OAAO,EAAEH;EAAQ,CAAC,CAAC;AAClE,CAAC;AAED,OAAO,MAAMI,iBAAiB,GAAIb,IAAI,IAAK,MAAOC,QAAQ,IAAK;EAC7D,IAAI;IACF,MAAMC,GAAG,GAAG,MAAMC,KAAK,CACpB,qCAAoCH,IAAI,CAACc,MAAO,EAAC,EAClD;MACET,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QACP,cAAc,EAAE,kBAAkB;QAClCC,aAAa,EAAE,SAAS,GAAGP,IAAI,CAACQ;MAClC;IACF,CAAC,CACF;IACD,MAAMC,OAAO,GAAG,MAAMP,GAAG,CAACQ,IAAI,EAAE;IAChCK,OAAO,CAACC,GAAG,CAAC,aAAa,EAACP,OAAO,CAAC;IAClCR,QAAQ,CAAC;MAAEU,IAAI,EAAEb,gBAAgB;MAAEc,OAAO,EAAEH;IAAQ,CAAC,CAAC;EACxD,CAAC,CAAC,OAAOQ,KAAK,EAAE;IACdF,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEC,KAAK,CAAC;EACtC;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}