{"ast":null,"code":"export const uploadToCloudinary = async pics => {\n  if (pics) {\n    const data = new FormData();\n    data.append(\"file\", pics);\n    data.append(\"upload_preset\", \"instagram\");\n    data.append(\"cloud_name\", \"dlzrgnpeo\");\n    const res = await fetch(\"https://api.cloudinary.com/v1_1/dlzrgnpeo/image/upload\", {\n      method: \"post\",\n      body: data\n    });\n    const fileData = await res.json();\n    console.log(\"url : \", fileData.url.toString());\n    return fileData.url.toString();\n  } else {\n    console.log(\"error\");\n  }\n};","map":{"version":3,"names":["uploadToCloudinary","pics","data","FormData","append","res","fetch","method","body","fileData","json","console","log","url","toString"],"sources":["E:/BTLJAVA/src/Config/UploadToCloudinary.js"],"sourcesContent":["\r\n\r\nexport const uploadToCloudinary = async (pics) => {\r\n  if (pics) {\r\n    \r\n    const data = new FormData();\r\n    data.append(\"file\", pics);\r\n    data.append(\"upload_preset\", \"instagram\");\r\n    data.append(\"cloud_name\", \"dlzrgnpeo\");\r\n\r\n    const res = await fetch(\"https://api.cloudinary.com/v1_1/dlzrgnpeo/image/upload\", {\r\n      method: \"post\",\r\n      body: data,\r\n    })\r\n      \r\n      const fileData=await res.json();\r\n      console.log(\"url : \", fileData.url.toString());\r\n      return fileData.url.toString();\r\n\r\n  } else {\r\n    console.log(\"error\");\r\n  }\r\n};\r\n\r\n\r\n"],"mappings":"AAEA,OAAO,MAAMA,kBAAkB,GAAG,MAAOC,IAAI,IAAK;EAChD,IAAIA,IAAI,EAAE;IAER,MAAMC,IAAI,GAAG,IAAIC,QAAQ,EAAE;IAC3BD,IAAI,CAACE,MAAM,CAAC,MAAM,EAAEH,IAAI,CAAC;IACzBC,IAAI,CAACE,MAAM,CAAC,eAAe,EAAE,WAAW,CAAC;IACzCF,IAAI,CAACE,MAAM,CAAC,YAAY,EAAE,WAAW,CAAC;IAEtC,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,wDAAwD,EAAE;MAChFC,MAAM,EAAE,MAAM;MACdC,IAAI,EAAEN;IACR,CAAC,CAAC;IAEA,MAAMO,QAAQ,GAAC,MAAMJ,GAAG,CAACK,IAAI,EAAE;IAC/BC,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAEH,QAAQ,CAACI,GAAG,CAACC,QAAQ,EAAE,CAAC;IAC9C,OAAOL,QAAQ,CAACI,GAAG,CAACC,QAAQ,EAAE;EAElC,CAAC,MAAM;IACLH,OAAO,CAACC,GAAG,CAAC,OAAO,CAAC;EACtB;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}